# Copy sshblack files and start service
# See https://wiki.fysik.dtu.dk/it/Linux_firewall_configuration

- name: Ensure target directory {{ bin_dir }} exists
  file:
    dest: "{{ bin_dir }}"
    state: directory

- name: Copy sshblack files from ansible server to local {{ bin_dir }}
  copy:
    src: "{{ item }}"
    dest: "{{ bin_dir }}"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  with_items:
    - sshblack/sshblack.pl
    - sshblack/bl
    - sshblack/unbl
    - sshblack/list
    - sshblack/unlist
    - sshblack-save-state

- name: Copy sshblack logrotate file
  copy:
    src: sshblacklisting
    dest: /etc/logrotate.d
    owner: root
    group: root
    mode: u=rw,g=r,o=r

# Create Systemd service sshblack

- name: Ensure service directory /usr/libexec/sshblack exists
  file:
    dest: /usr/libexec/sshblack
    state: directory

- name: Copy file init-sshblack
  copy:
    src: init-sshblack
    dest: /usr/libexec/sshblack
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Copy file sshblack.service
  copy:
    src: sshblack.service
    dest: /usr/lib/systemd/system
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Start sshblack service
  service:
    name=sshblack
    state=started
    enabled=yes

# Create a firewalld BLACKLIST chain

- name: Get firewalld filter chains
  command: "firewall-cmd --permanent --direct --get-chain ipv4 filter"
  register: chains
  # Ignore the "changed" status
  changed_when: False

- name: firewalld add chain BLACKLIST
  vars:
    firewalld_needs_reload: "true"
  command: firewall-cmd --permanent --direct --add-chain ipv4 filter BLACKLIST
  when: "'BLACKLIST' not in chains.stdout"

- name: firewalld SSH jump to chain BLACKLIST
  vars:
    firewalld_needs_reload: "true"
  command: firewall-cmd --direct --add-rule ipv4 filter INPUT_direct 7 -p tcp --dport 22 -m state --state NEW -j BLACKLIST
  when: "'BLACKLIST' not in chains.stdout"

- name: Create a cron job for sshblack-save-state (Checkpoint and Restart)
  cron:
    name: "sshblack-save-state"
    minute: "*/5"
    job: "{{ bin_dir }}sshblack-save-state"

- name: List unauthorized root login attempts
  cron:
    name: "Unauthorized root logins"
    minute: "0"
    hour: "8"
    job: "/bin/grep user=root /var/log/secure; /bin/grep Evil /var/log/messages"
