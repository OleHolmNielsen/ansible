*** sshblack.pl.orig	2007-11-17 23:51:49.000000000 +0100
--- sshblack.pl	2017-08-21 09:22:16.474689935 +0200
***************
*** 61,70 ****
  my($OUTPUTLOG) = '/var/log/sshblacklisting';
  #
  # The text database file to keep track of attackers
! my($CACHE) = '/var/tmp/ssh-blacklist-pending';
  #
  # REGEX for whitelisted IPs - never blacklist these addresses
! my($LOCALNET) = '^(?:127\.0\.0\.1|192\.168\.0)';
  #
  # Set $ADDRULE to the complete command line instruction for ADDING
  # attackers to the blacklist with the following change:
--- 61,73 ----
  my($OUTPUTLOG) = '/var/log/sshblacklisting';
  #
  # The text database file to keep track of attackers
! # my($CACHE) = '/var/tmp/ssh-blacklist-pending';
! my($CACHE) = '/var/lib/sshblack/ssh-blacklist-pending';
  #
  # REGEX for whitelisted IPs - never blacklist these addresses
! # 
! # my($LOCALNET) = '^(?:127\.0\.0\.1|192\.168\.0)';
! my($LOCALNET) = '^(?:127\.0\.0\.1|130\.225\.86|130\.225\.87|10\.54)';
  #
  # Set $ADDRULE to the complete command line instruction for ADDING
  # attackers to the blacklist with the following change:
***************
*** 100,106 ****
  # an illegal user. If you put both Illegal and Failed here
  # you might get double hits.
  #
! my($REASONS) = '(Failed password|Failed none)';
  #
  # Maximum time (sec) before they are removed from the database
  # unless they are already blacklisted
--- 103,111 ----
  # an illegal user. If you put both Illegal and Failed here
  # you might get double hits.
  #
! # Original
! # my($REASONS) = '(Failed password|Failed none|Invalid user)';
! my($REASONS) = '(Failed password|Failed none|Invalid user|Bye Bye \[preauth\])';
  #
  # Maximum time (sec) before they are removed from the database
  # unless they are already blacklisted
***************
*** 117,123 ****
  #
  # Maximum number of address listings before we hibernate.
  # This is an anti-DoS measure that will likely never fire.
! my($DOSBAIL) = 200;
  #
  # Set the level of verbosity.  1 = more periodic detail printed.
  # 0 = only important stuff will be printed.
--- 122,129 ----
  #
  # Maximum number of address listings before we hibernate.
  # This is an anti-DoS measure that will likely never fire.
! # my($DOSBAIL) = 200;
! my($DOSBAIL) = 500;
  #
  # Set the level of verbosity.  1 = more periodic detail printed.
  # 0 = only important stuff will be printed.
***************
*** 267,273 ****
                  }
                  else {
                     freeIp($loser[0]);
!                    logit("Freeing $loser[0]", $CHATTY, $EMAILME);
                  } #set free after $RELEASEDAYS
  
             }
--- 273,281 ----
                  }
                  else {
                     freeIp($loser[0]);
! 		# Suppress the Freeing mails
!                    # logit("Freeing $loser[0]", $CHATTY, $EMAILME);
!                    logit("Freeing $loser[0]", $CHATTY, 0);
                  } #set free after $RELEASEDAYS
  
             }
***************
*** 279,285 ****
             # under denial of service attack.  Hibernate so we don't
             # fill up the iptables chain or route table.
             if ($doscount > $DOSBAIL) {
!               logit("Possible DOS attack. Sleeping.",'1',$EMAILME);
                sleep(86400);
             }
          } # End while reading
--- 287,293 ----
             # under denial of service attack.  Hibernate so we don't
             # fill up the iptables chain or route table.
             if ($doscount > $DOSBAIL) {
!               logit("SSHblack: Possible DOS attack. Sleeping.",'1',$EMAILME);
                sleep(86400);
             }
          } # End while reading
