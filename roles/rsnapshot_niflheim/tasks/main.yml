# Setup rsnapshot Remote snapshot

- name: Install required packages from EPEL
  yum:
    name:
    - rsync
    - epel-release
    - rsnapshot
    - logrotate
    - bash-completion
    - git-all
    - vim-enhanced

- name: Remove the mlocate package because we may have too many files
  yum:
    name: mlocate
    state: absent

# The /usr/share/doc/rsnapshot* folder is different for el7 and el8 rpms
- name: Find rsnapshot files on remote machine
  shell: "rpm -ql rsnapshot | grep rsnapreport.pl"
  register: rsnapreport
  # Ignore the "changed" status
  changed_when: False
  args:
    warn: false

- name: Copy the rsnapreport.pl script from the rsnapshot RPM
  copy:
    src: "{{ rsnapreport.stdout }}"
    dest: "/usr/local/bin/"
    remote_src: yes
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Copy the rsnapshot master configuration files from this server
  copy:
    src: "{{ item }}"
    dest: "/etc/"
    backup: yes
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  with_items:
    - rsnapshot.exclude
    - rsnapshot-master.conf
    - rsnapshot-master-weekly.conf

#- name: "Debug"
#  debug:
#    var: backups

- name: "Create /etc/rsnapshot files"
  blockinfile:
    path: "/etc/rsnapshot-{{ item.backupname }}.conf"
    state: present
    create: yes
    insertafter: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.backupname }}"
    block: |
      # Rsnapshot backup
      snapshot_root	{{ snapshot_root }}/{{ item.backupname }}
      include_conf	/etc/rsnapshot-master.conf
  # Backup items are defined in the node host_vars/ file 
  with_items:
    - "{{ backups }}"

- name: "Add backups to /etc/rsnapshot files"
  blockinfile:
    path: "/etc/rsnapshot-{{ item.backupname }}.conf"
    state: present
    insertafter: EOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.backupname }} {{ item.dir }}"
    block: |
      backup	{{ item.dir }}/		./	+rsync_long_args=--stats
  with_items:
    - "{{ backups }}"

- name: "Create the rsnapshot top-level directories in {{ snapshot_root }}"
  file:
    path: "{{ snapshot_root }}/{{ item.backupname }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=,o=
  with_items:
    - "{{ backups }}"

- cron:
    name: "Make daily snapshots of roots and NFS server file systems"
    minute: "1"
    hour: "23"
    job: "/root/rsnapshots"

- name: Create rsnapshot logrotate script
  copy:
    src: logrotate.rsnapshot
    dest: /etc/logrotate.d/rsnapshot
    owner: root
    group: root
    mode: 0644

